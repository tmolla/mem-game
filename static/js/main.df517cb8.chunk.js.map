{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","changeGameState","id","Wrapper","children","Header","message","Footer","App","state","images","clicked","_this","includes","length","push","sort","Math","random","setState","_this2","this","components_Header","components_Wrapper","map","components_ImageCard","key","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"m/DAaeA,MAVf,SAAmBC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAOC,QAAS,kBAAMT,EAAMU,gBAAgBV,EAAMW,gBCA5EC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCU1BC,MAXf,SAAiBd,GACb,OACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,eACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,gFACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASJ,EAAMe,iBCExBC,MARf,WACI,OACAf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,8CCoDOc,6MAjDbC,MAAQ,CACNC,SACAC,QAAS,GACTL,QAAS,2BAGXL,gBAAkB,SAACC,GACjB,IAAMS,EAAUC,EAAKH,MAAME,QACvBL,EAAU,GASd,GARIM,EAAKH,MAAME,QAAQE,SAASX,IAC9BI,EAAU,mDACVK,EAAQG,OAAS,IAEjBH,EAAQI,KAAKb,GACbI,EAAUM,EAAKH,MAAME,QAAQG,OAAS,mBAAqBF,EAAKH,MAAMC,OAAOI,QAGxD,KAAnBH,EAAQG,OACVR,EAAU,kEACVK,EAAQG,OAAS,MACd,CACH,IAAMJ,EAASE,EAAKH,MAAMC,OAAOM,KAAK,kBAAIC,KAAKC,SAAW,KAC1DN,EAAKO,SAAS,CAACT,WAEjBE,EAAKO,SAAS,CAACb,qFAIR,IAAAc,EAAAC,KACP,OACE7B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4B,EAAD,CAAQhB,QAASe,KAAKZ,MAAMH,UAC5Bd,EAAAC,EAAAC,cAAC6B,EAAD,KACGF,KAAKZ,MAAMC,OAAOc,IAAI,SAAAzB,GAAK,OAC1BP,EAAAC,EAAAC,cAAC+B,EAAD,CACExB,gBAAiBmB,EAAKnB,gBACtBC,GAAIH,EAAMG,GACVwB,IAAK3B,EAAMG,GACXL,KAAME,EAAMF,KACZE,MAAOA,EAAMA,WAInBP,EAAAC,EAAAC,cAACiC,EAAD,cA7CYC,mBCFlBC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.df517cb8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} onClick={() => props.changeGameState(props.id)} />\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header (props) {\n    return(\n    <div className=\"jumbotron\">\n        <h1 className=\"display-3\">Memory-Game</h1>\n        <p className=\"lead\">If you only click once on all pictures you win; anything else, you are done!</p>\n        <hr className=\"my-2 line\"/>\n        <span className=\"score\">{props.message}</span>\n    </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer () {\n    return(\n    <div className=\"footer\">\n        <p>Telahoun Mola  &copy;2019 </p>\n    </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport images from \"./images.json\";\n\nclass App extends Component {\n  // Set the initial state\n  state = {\n    images,\n    clicked: [],\n    message: \"Start clicking buddy!\"\n  };\n\n  changeGameState = (id) => {\n    const clicked = this.state.clicked;\n    let message = \"\";\n    if (this.state.clicked.includes(id)) {\n      message = \"You lost dude! Click on any image to play again.\"\n      clicked.length = 0;\n    }else {\n      clicked.push(id);\n      message = this.state.clicked.length + \" correct out of \" + this.state.images.length;\n    }\n\n    if (clicked.length === 12) {\n      message = \"Congratulation, you have won! Click on any image to play again.\"\n      clicked.length = 0\n    }else{\n      const images = this.state.images.sort(()=>Math.random() - 0.5);\n      this.setState({images});\n    }\n    this.setState({message});\n  }\n\n  // Map imageCard component for each image object and render the page\n  render() {\n    return (\n      <div>\n      <Header message={this.state.message}/>\n      <Wrapper>\n        {this.state.images.map(image => (\n          <ImageCard\n            changeGameState={this.changeGameState}\n            id={image.id}\n            key={image.id}\n            name={image.name}\n            image={image.image}\n          />\n        ))}\n      </Wrapper>\n      <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}